{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\"; // video.js player from the docs: https://github.com/videojs/video.js/blob/master/docs/guides/react.md\n\nclass VideoPlayer extends React.Component {\n  componentDidMount() {\n    // instantiate Video.js\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log(\"onPlayerReady\", this);\n    });\n  } // destroy player on unmount\n  //   componentWillUnmount() {\n  //     if (this.player) {\n  //       this.player.dispose();\n  //     }\n  //   }\n  //   componentWillReceiveProps(newProps) {\n  //     // When a user moves from one title to the next, the VideoPlayer component will not be unmounted,\n  //     // instead its properties will be updated with the details of the new video. In this case,\n  //     // we can update the src of the existing player with the new video URL.\n  //     if (this.player) {\n  //       this.player.src({\n  //         type: newProps.video.mime_type,\n  //         src: newProps.video.video_url,\n  //       });\n  //     }\n  //   }\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  // use `ref` to give Video JS a reference to the video DOM element: https://reactjs.org/docs/refs-and-the-dom\n\n\n  render() {\n    return __jsx(\"div\", {\n      \"data-vjs-player\": true\n    }, __jsx(\"video\", {\n      ref: node => this.videoNode = node,\n      className: \"video-js\",\n      src: \"https://res.cloudinary.com/dalnnaod7/video/upload/v1587034700/video_1_ou39e0.mp4\",\n      onMouseEnter: () => this.player.play()\n    }));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["/Users/imac/Desktop/shopify-react2/components/Player1.jsx"],"names":["React","videojs","VideoPlayer","Component","componentDidMount","player","videoNode","props","onPlayerReady","console","log","render","node","play"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,4BAAP,C,CAEA;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,MAAL,GAAcJ,OAAO,CAAC,KAAKK,SAAN,EAAiB,KAAKC,KAAtB,EAA6B,SAASC,aAAT,GAAyB;AACzEC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,IAA7B;AACD,KAFoB,CAArB;AAGD,GANuC,CAQxC;AACF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK;AAAL,OACE;AACE,MAAA,GAAG,EAAGC,IAAD,IAAW,KAAKN,SAAL,GAAiBM,IADnC;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,GAAG,EAAC,kFAHN;AAIE,MAAA,YAAY,EAAE,MAAM,KAAKP,MAAL,CAAYQ,IAAZ;AAJtB,MADF,CADF;AAUD;;AA3CuC;;AA8C1C,eAAeX,WAAf","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\n// video.js player from the docs: https://github.com/videojs/video.js/blob/master/docs/guides/react.md\n\nclass VideoPlayer extends React.Component {\n  componentDidMount() {\n    // instantiate Video.js\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log(\"onPlayerReady\", this);\n    });\n  }\n\n  // destroy player on unmount\n//   componentWillUnmount() {\n//     if (this.player) {\n//       this.player.dispose();\n//     }\n//   }\n\n//   componentWillReceiveProps(newProps) {\n//     // When a user moves from one title to the next, the VideoPlayer component will not be unmounted,\n//     // instead its properties will be updated with the details of the new video. In this case,\n//     // we can update the src of the existing player with the new video URL.\n//     if (this.player) {\n//       this.player.src({\n//         type: newProps.video.mime_type,\n//         src: newProps.video.video_url,\n//       });\n//     }\n//   }\n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n\n  // use `ref` to give Video JS a reference to the video DOM element: https://reactjs.org/docs/refs-and-the-dom\n  render() {\n    return (\n      <div data-vjs-player>\n        <video\n          ref={(node) => (this.videoNode = node)}\n          className=\"video-js\"\n          src=\"https://res.cloudinary.com/dalnnaod7/video/upload/v1587034700/video_1_ou39e0.mp4\"\n          onMouseEnter={() => this.player.play()}\n        ></video>\n      </div>\n    );\n  }\n}\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}